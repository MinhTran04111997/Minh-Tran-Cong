{"version":3,"sources":["Note.js","App.js","index.js"],"names":["Note","note","content","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","important","onClick","map","id","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"+IAQeA,EANF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,6BAAKA,EAAKC,WCyDCC,EA1DH,SAACC,GACX,MAA0BC,mBAASD,EAAME,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAC5B,iBADF,mBAAOG,EAAP,KAAgBC,EAAhB,KAGA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAwBMC,EAAcF,EAChBJ,EACAA,EAAMO,QAAO,SAAAZ,GAAI,OAAIA,EAAKa,aAG9B,OACE,gCACE,uCACA,8BACE,yBAAQC,QAAS,kBAAMJ,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGE,EAAYI,KAAI,SAAAf,GAAI,OACjB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKgB,SAGtB,uBAAMC,SAvCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBnB,QAASM,EACTc,MAAM,IAAIC,MAAOC,cACjBV,UAAWW,KAAKC,SAAW,GAC3BT,GAAIX,EAAMqB,OAAS,GAIrBpB,EAASD,EAAMsB,OAAOP,IACtBZ,EAAW,KA4BT,UACE,uBAAOoB,MAAOrB,EACZsB,SA1BiB,SAACX,GACxBY,QAAQC,IAAIb,EAAMc,OAAOJ,OACzBpB,EAAWU,EAAMc,OAAOJ,UA0BpB,wBAAQK,KAAK,SAAb,yBC9BRC,IAASC,OACP,cAAC,EAAD,CAAK9B,MAtBO,CACZ,CACEW,GAAI,EACJf,QAAS,eACToB,KAAM,2BACNR,WAAW,GAEb,CACEG,GAAI,EACJf,QAAS,sCACToB,KAAM,2BACNR,WAAW,GAEb,CACEG,GAAI,EACJf,QAAS,+DACToB,KAAM,2BACNR,WAAW,MAMbuB,SAASC,eAAe,W","file":"static/js/main.c7f77c5d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note }) => {\r\n  return (\r\n    <li>{note.content}</li>\r\n  )\r\n}\r\n\r\nexport default Note","import React, {useState} from 'react'\nimport Note from './Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  ) \n  const [showAll, setShowAll] = useState(true)\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n    \n\n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n    \n}\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n    \n  }\n  \n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important )\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note => \n            <Note key={note.id} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote}\n          onChange={handleNoteChange}\n          />\n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n  \n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n)"],"sourceRoot":""}